trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - '*'

stages:
- stage: Pull_Request_Validation 
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest  # Adjust based on your preference (windows-latest, macOS-latest)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.13.0'  # Adjust based on your Next.js requirements
      displayName: 'Install Node.js'
    - script: |
        npm install -g npm 
        npm install  # Install project dependencies
      displayName: 'Install dependencies'
    - script: npm run build  # Run Next.js build command
      displayName: 'Build Next.js application'
    - publish: $(System.DefaultWorkingDirectory)/build  # Publish build artifacts
    
  - job: SecurityScan
    dependsOn: Build  # Run scan after build completes
    condition: succeeded()  # Only run scan if build succeeds
    pool:
      vmImage: ubuntu-latest  # Adjust based on your preference
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.13.0'  # Adjust based on your Next.js requirements
      displayName: 'Install Node.js'
    - script: npm install -g snyk  # Install Snyk globally
      displayName: 'Install Snyk'
    - script: snyk test --free  # Run Snyk test in free tier mode
      displayName: 'Run Snyk security scan (Free Tier)'

  - job: Test
    dependsOn: Build  # Run tests after build completes
    condition: succeeded()  # Only run tests if build succeeds
    pool:
      vmImage: ubuntu-latest  # Adjust based on your preference
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.13.0'  # Adjust based on your Next.js requirements
      displayName: 'Install Node.js'
    - script: npm install  # Restore project dependencies
      displayName: 'Install dependencies'
    - script: npm test  # Run Jest tests
      displayName: 'Run Jest tests'
      env:
        TEST_RESULTS_FILE: $(System.DefaultWorkingDirectory)/test-results.xml  # Optional: Define output file for test results